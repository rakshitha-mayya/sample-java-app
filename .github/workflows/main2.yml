name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to' 
        type: choice
        options:
          - 'dev'
          - 'QA'
          - 'Prod'
        required: true
      jobs:
        description: 'Environment to deploy to' 
        type: choice
        options:
          - 'sonar'
          - 'build'
          - 'deploy'

jobs:
  build:
    if: ${{inputs.jobs == "build" }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build
      run: |
        mvn clean install
        mvn clean package
        
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: target/
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      

      - name: Set up Environment
        run: echo "Setting up environment=${{ github.event.inputs.environment }}"
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}

  deploy-development:
    runs-on: ubuntu-latest
    needs: deploy
    environment: 'dev'
    if: github.event.inputs.environment == 'dev'

    steps:

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: java-app
          path: target/
          
      - name: Deploy to Development
        run: echo "Deploying to development..."

  deploy-qa:
    runs-on: ubuntu-latest
    needs: deploy
    environment: 'QA'
    if: github.event.inputs.environment == 'QA'

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/
        
    - name: Deploy to QA
      run: echo "Deploying to QA..."

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy
    environment: 'Prod'
    if: github.event.inputs.environment == 'Prod'

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: java-app
          path: target/
      - name: Deploy to Production
        run: echo "Deploying to production..."
