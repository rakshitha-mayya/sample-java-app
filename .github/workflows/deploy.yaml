name: Multi-Stage Pipeline

on:
  pull_request:
    types: [opened, closed]
    branches:  
      - main

jobs:
   Gitleaks:
    if: ${{github.event.action == 'opened' && github.event.pull_request.base.ref=='main'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
        continue-on-error: true
        
   SonarQube-scan:
    if: ${{github.event.action == 'opened' && github.event.pull_request.base.ref=='main'}}
    needs: Gitleaks
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed for PR comments
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Add SonarQube scan summary
        run: |
          echo "🔍 SonarQube Scan Results" >> $GITHUB_STEP_SUMMARY
          echo '<p align="center"><a href="https://sonarcloud.io/project/overview?id=rakshitha-mayya_sample-repository-structure">📊 View Full Report</a></p>' >> $GITHUB_STEP_SUMMARY
   
   Trivy-Scan:
    if: ${{github.event.action == 'opened' && github.event.pull_request.base.ref=='main'}}
    needs: SonarQube-scan
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Trivy vulnerability scanner (Filesystem)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          severity: 'HIGH,CRITICAL'
          output: 'trivy-results.txt'
      
      - name: Show Trivy results in summary
        run: |
          echo "## 🔍 Trivy Scan Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat trivy-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
   Build-Deploy:
    if: ${{github.event.action == 'merged' && github.event.pull_request.base.ref=='main'}}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build
      run: |
        mvn clean install
        mvn clean package
        
    - name: Build Docker image
      run: |
        # CURRENT_TAG=$(echo $(git rev-parse --short HEAD))
        # echo ${CURRENT_TAG}
        # cd $PWD/application/node-k8s-app
        # docker build -t gitopsaksclusteracr.azurecr.io/nodejs-app:${CURRENT_TAG} .
        # docker push gitopsaksclusteracr.azurecr.io/nodejs-app:${CURRENT_TAG}

    - name: update tag
      run: | 
        CURRENT_TAG=$(git rev-parse --short HEAD)
        echo "Current tag: ${CURRENT_TAG}"
        
        cd helmcharts
        sed -i "s/tag: .*/tag: ${CURRENT_TAG}/" values.yaml

        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        git add values.yaml
        git commit -m "Update image tag to ${CURRENT_TAG}" || echo "No changes to commit"
        git push 

    - name: deploy
      run: |
        cd helmcharts
        #login to cluster
        #kubectl apply -f application.yaml -n argocd
