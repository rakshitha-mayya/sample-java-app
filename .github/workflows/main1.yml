name: Multi-Stage Pipeline 1

on:
  push:
    branches:
      - main
  pull_request:
    branches:  
      - main 
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build
      run: |
        mvn clean install
        mvn clean package
        
    - name: Archive Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: target/
    
  
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up Vault CLI
      run: |
        VAULT_VERSION="1.8.1"  # Replace with the desired version
        curl -fsSL -o vault.zip https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
        unzip vault.zip
        sudo mv vault /usr/local/bin/
        vault --version  # Check that Vault is installe
  
    - name: Retrieve secret from Vault
      run: |
        export VAULT_ADDR=http://127.0.0.1:8200
        export VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}
        export SECRET_VALUE=$(vault kv get -mount="secret" "MYSECRET")
        echo "Secret value: $SECRET_VALUE"
        echo "VAULT_SECRET=$SECRET_VALUE" >> $GITHUB_ENV


    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: main
        token: $VAULT_SECRET
    
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Set Release Version
      run: echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

    - name: Tag Release
      run: |
        git config --global user.email "rakshithamayya6@gmail.com"
        git config --global user.name "rakshitha-mayya"
        git tag $RELEASE_VERSION
        git push origin $RELEASE_VERSION
    
    - name: Release
      run: echo "Release"
  
  deploy_dev:
    runs-on: ubuntu-latest
    environment: 'dev'
    needs: release


    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to Dev
      run: echo "Deploying to Dev environment"

  deploy_qa:
    runs-on: ubuntu-latest
    environment: 'QA'
    needs: deploy_dev

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to QA
      run: echo "Deploying to QA environment"

  deploy_prod:
    runs-on: ubuntu-latest
    environment: 'Prod'
    needs: deploy_qa

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: java-app
        path: target/

    - name: Deploy to Prod
      run: echo "Deploying to Prod environment"

 
 
